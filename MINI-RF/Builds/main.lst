   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 111               		.section	.text.startup,"ax",@progbits
 113               	.global	main
 115               	main:
   1:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <stdio.h>
   2:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <avr/io.h>
   3:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <avr/interrupt.h>
   4:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <util/delay.h>
   5:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <stdbool.h>
   6:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "TWI_Master.h"
   7:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "cc1101.h"
   8:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "pins_arduino.h"
   9:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //#include "ext_interrupt.h"
  10:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveaddress    0x04
  11:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveAddress2   0x40
  12:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveAddress3   0x68
  13:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveAddress4   (0x48>>1)
  14:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define bit(b) (1UL << (b))
  15:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define tx_size 61
  16:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** 
  17:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte TX_buffer[tx_size]={0};
  18:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte i;
  19:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** 
  20:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte RX_buffer[61]={0};
  21:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte i;
  22:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte available=false;
  23:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** void pciSetup(byte pin);
  24:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** ISR (PCINT2_vect);
  25:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** int main(void) {
 117               	.LM0:
 118               	.LFBB1:
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
  26:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte version;
  27:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte size = 0x00;
  28:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte marcstate;
  29:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte res;
  30:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     uint32_t X0,X1,Y0,Y1,Y2;
  31:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     uint32_t X_out,Y_out1,Y_out2;
  32:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     
  33:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     Init();
 124               	.LM1:
 125 0000 00D0      		rcall Init
  34:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     version = SpiReadStatus(CC1101_VERSION);
 127               	.LM2:
 128 0002 81E3      		ldi r24,lo8(49)
 129 0004 00D0      		rcall SpiReadStatus
  35:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     SetReceive();
 131               	.LM3:
 132 0006 00D0      		rcall SetReceive
  36:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     TX_buffer[0] = 0x02;//Accerometer
 134               	.LM4:
 135 0008 82E0      		ldi r24,lo8(2)
 136 000a 8093 0000 		sts TX_buffer,r24
 137 000e 91E0      		ldi r25,lo8(1)
 138 0010 2AE0      		ldi r18,lo8(10)
 139               	.L2:
  37:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     for(i=1;i<tx_size;i++)
  38:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             {
  39:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TX_buffer[i]=i*10;
 141               	.LM5:
 142 0012 E92F      		mov r30,r25
 143 0014 F0E0      		ldi r31,0
 144 0016 E050      		subi r30,lo8(-(TX_buffer))
 145 0018 F040      		sbci r31,hi8(-(TX_buffer))
 146 001a 2083      		st Z,r18
  37:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     for(i=1;i<tx_size;i++)
 148               	.LM6:
 149 001c 9F5F      		subi r25,lo8(-(1))
 150 001e 265F      		subi r18,lo8(-(10))
 151 0020 9D33      		cpi r25,lo8(61)
 152 0022 01F4      		brne .L2
 153 0024 9093 0000 		sts i,r25
  40:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
  41:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Init (100000))
 155               	.LM7:
 156 0028 60EA      		ldi r22,lo8(-96)
 157 002a 76E8      		ldi r23,lo8(-122)
 158 002c 81E0      		ldi r24,lo8(1)
 159 002e 90E0      		ldi r25,0
 160 0030 00D0      		rcall TWIM_Init
 161 0032 8823      		tst r24
 162 0034 01F0      		breq .L3
 163               	.LBB7:
  42:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  43:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     
  44:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             while (1);
  45:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  46:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     /*
  47:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****      ** Endless loop
  48:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****      */
  49:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     while (1)
  50:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     {
  51:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint32_t X=0, Y=0,respond;
  52:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint16_t AcX = 0;
  53:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint8_t MSBH,MSBL,LSBH,LSBL;
  54:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         DDRD = (1<<6);
 165               	.LM8:
 166 0036 C0E4      		ldi r28,lo8(64)
 167 0038 00C0      		rjmp .L4
 168               	.L3:
 169               	.LBE7:
  44:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
 171               	.LM9:
 172 003a 00C0      		rjmp .L3
 173               	.L27:
 174               	.LBB12:
  55:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if(!TWIM_Start(slaveAddress4, TWIM_WRITE))
  56:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  57:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
  58:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
  59:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  60:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else{
  61:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x00);
  62:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x00);
  63:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xFF);
  64:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x02);
  65:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xFE);
  66:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
  67:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xD4);
  68:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x02);//get firmware
  69:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x2A);
  70:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x00);
  71:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             PORTD = (1<<6);
  72:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
 176               	.LM10:
 177 003c 00D0      		rcall TWIM_Stop
  73:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  74:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Start (slaveAddress4, TWIM_READ))
 179               	.LM11:
 180 003e 61E0      		ldi r22,lo8(1)
 181 0040 84E2      		ldi r24,lo8(36)
 182 0042 00D0      		rcall TWIM_Start
 183 0044 8823      		tst r24
 184 0046 01F0      		breq .L28
  75:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  76:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
  77:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  78:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else
  79:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  80:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TWIM_ReadAck();
  81:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TWIM_ReadAck();
  82:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TWIM_ReadAck();
  83:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TWIM_ReadAck();
  84:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TWIM_ReadAck();
  85:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
  86:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             MSBH = TWIM_ReadAck();
 186               	.LM12:
 187 0048 00D0      		rcall TWIM_ReadAck
 188 004a D82F      		mov r29,r24
  87:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond = MSBH;
  88:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond <<=8;
  89:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             MSBL = TWIM_ReadAck();
 190               	.LM13:
 191 004c 00D0      		rcall TWIM_ReadAck
 192 004e 182F      		mov r17,r24
  90:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond|=MSBL;
  91:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond <<=8;
  92:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             LSBH = TWIM_ReadAck();
 194               	.LM14:
 195 0050 00D0      		rcall TWIM_ReadAck
 196 0052 082F      		mov r16,r24
  93:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond |=LSBH;
  94:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond <<=8;
  95:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             LSBL = TWIM_ReadAck();
 198               	.LM15:
 199 0054 00D0      		rcall TWIM_ReadAck
 200 0056 F82E      		mov r15,r24
  96:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             respond |=LSBL;
  97:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             //TX_buffer[1] = MSB;
  98:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             //TX_buffer[2] = LSB;
  99:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             PORTD &= ~(1<<6);
 202               	.LM16:
 203 0058 5E98      		cbi 0xb,6
 204               	.L28:
 100:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
 206               	.LM17:
 207 005a 00D0      		rcall TWIM_Stop
 101:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
 102:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** 
 103:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Start (slaveaddress, TWIM_WRITE))
 209               	.LM18:
 210 005c 60E0      		ldi r22,0
 211 005e 84E0      		ldi r24,lo8(4)
 212 0060 00D0      		rcall TWIM_Start
 213 0062 8111      		cpse r24,__zero_reg__
 214 0064 00C0      		rjmp .L9
 215               	.L13:
 104:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
 105:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
 217               	.LM19:
 218 0066 00D0      		rcall TWIM_Stop
 219               	.LBB8:
 220               	.LBB9:
 222               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* $Id: delay.h.in 2385 2013-05-03 13:14:20Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  41:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  42:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  46:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /** \file */
  47:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \code
  49:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \endcode
  53:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  54:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     used.
  58:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  59:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  68:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  77:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  81:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** */
  82:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  87:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  88:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  93:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  94:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  97:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  98:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
 103:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 104:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /**
 105:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 107:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 109:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 112:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 114:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 120:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 125:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 132:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 140:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****  */
 141:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** void
 142:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** {
 144:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 155:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 158:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#else
 159:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#endif
 162:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 163:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 224               	.LM20:
 225 0068 2FEF      		ldi r18,lo8(2399999)
 226 006a 8EE9      		ldi r24,hi8(2399999)
 227 006c 94E2      		ldi r25,hlo8(2399999)
 228 006e 2150      		1: subi r18,1
 229 0070 8040      		sbci r24,0
 230 0072 9040      		sbci r25,0
 231 0074 01F4      		brne 1b
 232 0076 00C0      		rjmp .
 233 0078 0000      		nop
 234               	.LBE9:
 235               	.LBE8:
 237               	.Ltext2:
 106:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
 107:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else
 108:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
 109:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             marcstate = SpiReadStatus(CC1101_MARCSTATE);
 110:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if(SpiReadStatus(CC1101_MARCSTATE) != 1){
 111:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 marcstate = SpiReadStatus(CC1101_MARCSTATE);
 112:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 _delay_ms(1000);
 113:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
 114:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             size=ReceiveData(RX_buffer);
 115:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(MSBH);
 116:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(MSBL);
 117:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(LSBH);
 118:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(LSBL);
 119:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 120:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if (size>0) {
 121:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TWIM_Write(RX_buffer[8]);
 122:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 
 123:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 if(RX_buffer[0] == 0x02){
 124:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                     SpiWriteReg(CC1101_TXFIFO,tx_size);
 125:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiWriteBurstReg(CC1101_TXFIFO,TX_buffer,tx_size);      //write data to sen
 126:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_STX);                  //start send
 127:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         //TWIM_Write(SpiReadStatus(CC1101_MARCSTATE));
 128:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_high();
 129:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_low();
 130:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         if((SpiReadStatus(CC1101_TXBYTES) & 0x7F) == 0)
 131:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                             res = 1;
 132:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 133:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         //TWIM_Write(res);
 134:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                     //PORTD = (1<<6);
 135:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_SFTX);
 136:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 }
 137:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
 138:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             //TWIM_Write(size);
 139:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****            TWIM_Stop ();
 140:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****        }
 141:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         _delay_ms(1500);
 142:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         SetReceive();
 239               	.LM21:
 240 007a 00D0      		rcall SetReceive
 143:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         PORTD &= ~(1<<6);
 242               	.LM22:
 243 007c 5E98      		cbi 0xb,6
 244               	.L4:
  54:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if(!TWIM_Start(slaveAddress4, TWIM_WRITE))
 246               	.LM23:
 247 007e CAB9      		out 0xa,r28
  55:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
 249               	.LM24:
 250 0080 60E0      		ldi r22,0
 251 0082 84E2      		ldi r24,lo8(36)
 252 0084 00D0      		rcall TWIM_Start
 253 0086 8823      		tst r24
 254 0088 01F0      		breq .L27
  61:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x00);
 256               	.LM25:
 257 008a 80E0      		ldi r24,0
 258 008c 00D0      		rcall TWIM_Write
  62:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xFF);
 260               	.LM26:
 261 008e 80E0      		ldi r24,0
 262 0090 00D0      		rcall TWIM_Write
  63:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x02);
 264               	.LM27:
 265 0092 8FEF      		ldi r24,lo8(-1)
 266 0094 00D0      		rcall TWIM_Write
  64:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xFE);
 268               	.LM28:
 269 0096 82E0      		ldi r24,lo8(2)
 270 0098 00D0      		rcall TWIM_Write
  65:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 272               	.LM29:
 273 009a 8EEF      		ldi r24,lo8(-2)
 274 009c 00D0      		rcall TWIM_Write
  67:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x02);//get firmware
 276               	.LM30:
 277 009e 84ED      		ldi r24,lo8(-44)
 278 00a0 00D0      		rcall TWIM_Write
  68:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x2A);
 280               	.LM31:
 281 00a2 82E0      		ldi r24,lo8(2)
 282 00a4 00D0      		rcall TWIM_Write
  69:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0x00);
 284               	.LM32:
 285 00a6 8AE2      		ldi r24,lo8(42)
 286 00a8 00D0      		rcall TWIM_Write
  70:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             PORTD = (1<<6);
 288               	.LM33:
 289 00aa 80E0      		ldi r24,0
 290 00ac 00D0      		rcall TWIM_Write
  71:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
 292               	.LM34:
 293 00ae CBB9      		out 0xb,r28
 294 00b0 00C0      		rjmp .L27
 295               	.L9:
 109:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if(SpiReadStatus(CC1101_MARCSTATE) != 1){
 297               	.LM35:
 298 00b2 85E3      		ldi r24,lo8(53)
 299 00b4 00D0      		rcall SpiReadStatus
 110:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 marcstate = SpiReadStatus(CC1101_MARCSTATE);
 301               	.LM36:
 302 00b6 85E3      		ldi r24,lo8(53)
 303 00b8 00D0      		rcall SpiReadStatus
 304 00ba 8130      		cpi r24,lo8(1)
 305 00bc 01F0      		breq .L11
 111:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 _delay_ms(1000);
 307               	.LM37:
 308 00be 85E3      		ldi r24,lo8(53)
 309 00c0 00D0      		rcall SpiReadStatus
 310               	.LBB10:
 311               	.LBB11:
 313               	.Ltext3:
 315               	.LM38:
 316 00c2 2FEF      		ldi r18,lo8(1599999)
 317 00c4 89E6      		ldi r24,hi8(1599999)
 318 00c6 98E1      		ldi r25,hlo8(1599999)
 319 00c8 2150      		1: subi r18,1
 320 00ca 8040      		sbci r24,0
 321 00cc 9040      		sbci r25,0
 322 00ce 01F4      		brne 1b
 323 00d0 00C0      		rjmp .
 324 00d2 0000      		nop
 325               	.L11:
 326               	.LBE11:
 327               	.LBE10:
 329               	.Ltext4:
 114:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(MSBH);
 331               	.LM39:
 332 00d4 80E0      		ldi r24,lo8(RX_buffer)
 333 00d6 90E0      		ldi r25,hi8(RX_buffer)
 334 00d8 00D0      		rcall ReceiveData
 335 00da E82E      		mov r14,r24
 115:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(MSBL);
 337               	.LM40:
 338 00dc 8D2F      		mov r24,r29
 339 00de 00D0      		rcall TWIM_Write
 116:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(LSBH);
 341               	.LM41:
 342 00e0 812F      		mov r24,r17
 343 00e2 00D0      		rcall TWIM_Write
 117:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(LSBL);
 345               	.LM42:
 346 00e4 802F      		mov r24,r16
 347 00e6 00D0      		rcall TWIM_Write
 118:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 349               	.LM43:
 350 00e8 8F2D      		mov r24,r15
 351 00ea 00D0      		rcall TWIM_Write
 120:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TWIM_Write(RX_buffer[8]);
 353               	.LM44:
 354 00ec EE20      		tst r14
 355 00ee 01F4      		brne .+2
 356 00f0 00C0      		rjmp .L13
 121:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 
 358               	.LM45:
 359 00f2 8091 0000 		lds r24,RX_buffer+8
 360 00f6 00D0      		rcall TWIM_Write
 123:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                     SpiWriteReg(CC1101_TXFIFO,tx_size);
 362               	.LM46:
 363 00f8 8091 0000 		lds r24,RX_buffer
 364 00fc 8230      		cpi r24,lo8(2)
 365 00fe 01F0      		breq .+2
 366 0100 00C0      		rjmp .L13
 124:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiWriteBurstReg(CC1101_TXFIFO,TX_buffer,tx_size);      //write data to sen
 368               	.LM47:
 369 0102 6DE3      		ldi r22,lo8(61)
 370 0104 8FE3      		ldi r24,lo8(63)
 371 0106 00D0      		rcall SpiWriteReg
 125:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_STX);                  //start send
 373               	.LM48:
 374 0108 4DE3      		ldi r20,lo8(61)
 375 010a 60E0      		ldi r22,lo8(TX_buffer)
 376 010c 70E0      		ldi r23,hi8(TX_buffer)
 377 010e 8FE3      		ldi r24,lo8(63)
 378 0110 00D0      		rcall SpiWriteBurstReg
 126:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         //TWIM_Write(SpiReadStatus(CC1101_MARCSTATE));
 380               	.LM49:
 381 0112 85E3      		ldi r24,lo8(53)
 382 0114 00D0      		rcall SpiStrobe
 383               	.L15:
 128:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_low();
 385               	.LM50:
 386 0116 4D9B      		sbis 0x9,5
 387 0118 00C0      		rjmp .L15
 388               	.L21:
 129:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         if((SpiReadStatus(CC1101_TXBYTES) & 0x7F) == 0)
 390               	.LM51:
 391 011a 4D99      		sbic 0x9,5
 392 011c 00C0      		rjmp .L21
 130:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                             res = 1;
 394               	.LM52:
 395 011e 8AE3      		ldi r24,lo8(58)
 396 0120 00D0      		rcall SpiReadStatus
 135:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 }
 398               	.LM53:
 399 0122 8BE3      		ldi r24,lo8(59)
 400 0124 00D0      		rcall SpiStrobe
 401 0126 00C0      		rjmp .L13
 402               	.LBE12:
 419               	.Lscope1:
 420               		.text
 423               	.global	pciSetup
 425               	pciSetup:
 144:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         //pciSetup(5);
 145:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     }
 146:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 147:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** void pciSetup(byte pin)
 148:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** {
 427               	.LM54:
 428               	.LFBB2:
 429               	/* prologue: function */
 430               	/* frame size = 0 */
 431               	/* stack size = 0 */
 432               	.L__stack_usage = 0
 149:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     *digitalPinToPCMSK(pin) |= bit (digitalPinToPCMSKbit(pin));  // enable pin
 434               	.LM55:
 435 0000 8830      		cpi r24,lo8(8)
 436 0002 00F0      		brlo .L34
 438               	.LM56:
 439 0004 8E30      		cpi r24,lo8(14)
 440 0006 00F0      		brlo .L35
 442               	.LM57:
 443 0008 8631      		cpi r24,lo8(22)
 444 000a 00F4      		brsh .L36
 446               	.LM58:
 447 000c ECE6      		ldi r30,lo8(108)
 448 000e F0E0      		ldi r31,0
 449 0010 00C0      		rjmp .L31
 450               	.L34:
 451 0012 EDE6      		ldi r30,lo8(109)
 452 0014 F0E0      		ldi r31,0
 453 0016 00C0      		rjmp .L31
 454               	.L35:
 455 0018 EBE6      		ldi r30,lo8(107)
 456 001a F0E0      		ldi r31,0
 457 001c 00C0      		rjmp .L31
 458               	.L36:
 459 001e E0E0      		ldi r30,0
 460 0020 F0E0      		ldi r31,0
 461               	.L31:
 463               	.LM59:
 464 0022 9081      		ld r25,Z
 465 0024 282F      		mov r18,r24
 466 0026 2770      		andi r18,lo8(7)
 467 0028 41E0      		ldi r20,lo8(1)
 468 002a 50E0      		ldi r21,0
 469 002c 60E0      		ldi r22,0
 470 002e 70E0      		ldi r23,0
 471 0030 00C0      		rjmp 2f
 472               		1:
 473 0032 440F      		lsl r20
 474 0034 551F      		rol r21
 475 0036 661F      		rol r22
 476 0038 771F      		rol r23
 477               		2:
 478 003a 2A95      		dec r18
 479 003c 02F4      		brpl 1b
 480 003e 492B      		or r20,r25
 481 0040 4083      		st Z,r20
 150:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     PCIFR  |= bit (digitalPinToPCICRbit(pin)); // clear any outstanding interrupt
 483               	.LM60:
 484 0042 2BB3      		in r18,0x1b
 485 0044 8830      		cpi r24,lo8(8)
 486 0046 00F0      		brlo .L37
 488               	.LM61:
 489 0048 8031      		cpi r24,lo8(16)
 490 004a 00F0      		brlo .L38
 492               	.LM62:
 493 004c 8831      		cpi r24,lo8(24)
 494 004e 00F0      		brlo .L39
 496               	.LM63:
 497 0050 91E0      		ldi r25,lo8(1)
 498 0052 00C0      		rjmp .L32
 499               	.L37:
 500 0054 92E0      		ldi r25,lo8(2)
 501 0056 00C0      		rjmp .L32
 502               	.L38:
 503 0058 98E0      		ldi r25,lo8(8)
 504 005a 00C0      		rjmp .L32
 505               	.L39:
 506 005c 94E0      		ldi r25,lo8(4)
 507               	.L32:
 509               	.LM64:
 510 005e 922B      		or r25,r18
 511 0060 9BBB      		out 0x1b,r25
 151:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     PCICR  |= bit (digitalPinToPCICRbit(pin)); // enable interrupt for the group
 513               	.LM65:
 514 0062 9091 6800 		lds r25,104
 515 0066 8830      		cpi r24,lo8(8)
 516 0068 00F0      		brlo .L40
 518               	.LM66:
 519 006a 8031      		cpi r24,lo8(16)
 520 006c 00F0      		brlo .L41
 522               	.LM67:
 523 006e 8831      		cpi r24,lo8(24)
 524 0070 00F0      		brlo .L42
 526               	.LM68:
 527 0072 81E0      		ldi r24,lo8(1)
 528 0074 00C0      		rjmp .L33
 529               	.L40:
 530 0076 82E0      		ldi r24,lo8(2)
 531 0078 00C0      		rjmp .L33
 532               	.L41:
 533 007a 88E0      		ldi r24,lo8(8)
 534 007c 00C0      		rjmp .L33
 535               	.L42:
 536 007e 84E0      		ldi r24,lo8(4)
 537               	.L33:
 539               	.LM69:
 540 0080 892B      		or r24,r25
 541 0082 8093 6800 		sts 104,r24
 542 0086 0895      		ret
 544               	.Lscope2:
 546               	.global	__vector_5
 548               	__vector_5:
 152:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 153:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** ISR (PCINT2_vect) // handle pin change interrupt for D0 to D7 here
 154:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** {
 550               	.LM70:
 551               	.LFBB3:
 552 0088 1F92      		push r1
 553 008a 0F92      		push r0
 554 008c 0FB6      		in r0,__SREG__
 555 008e 0F92      		push r0
 556 0090 1124      		clr __zero_reg__
 557 0092 8F93      		push r24
 558               	/* prologue: Signal */
 559               	/* frame size = 0 */
 560               	/* stack size = 4 */
 561               	.L__stack_usage = 4
 155:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     available = true;
 563               	.LM71:
 564 0094 81E0      		ldi r24,lo8(1)
 565 0096 8093 0000 		sts available,r24
 566               	/* epilogue start */
 156:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 568               	.LM72:
 569 009a 8F91      		pop r24
 570 009c 0F90      		pop r0
 571 009e 0FBE      		out __SREG__,r0
 572 00a0 0F90      		pop r0
 573 00a2 1F90      		pop r1
 574 00a4 1895      		reti
 576               	.Lscope3:
 577               	.global	available
 578               		.section .bss
 581               	available:
 582 0000 00        		.zero	1
 583               	.global	RX_buffer
 586               	RX_buffer:
 587 0001 0000 0000 		.zero	61
 587      0000 0000 
 587      0000 0000 
 587      0000 0000 
 587      0000 0000 
 588               		.comm	i,1,1
 589               	.global	TX_buffer
 592               	TX_buffer:
 593 003e 0000 0000 		.zero	61
 593      0000 0000 
 593      0000 0000 
 593      0000 0000 
 593      0000 0000 
 612               		.text
 614               	.Letext0:
 615               		.ident	"GCC: (GNU) 4.9.3"
 616               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:4      *ABS*:000000000000003f __SREG__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:115    .text.startup:0000000000000000 main
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:592    .bss:000000000000003e TX_buffer
                            *COM*:0000000000000001 i
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:586    .bss:0000000000000001 RX_buffer
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:425    .text:0000000000000000 pciSetup
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:548    .text:0000000000000088 __vector_5
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccQwi8MO.s:581    .bss:0000000000000000 available

UNDEFINED SYMBOLS
Init
SpiReadStatus
SetReceive
TWIM_Init
TWIM_Stop
TWIM_Start
TWIM_ReadAck
TWIM_Write
ReceiveData
SpiWriteReg
SpiWriteBurstReg
SpiStrobe
__do_clear_bss
