   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 111               	.global	__floatunsisf
 112               	.global	__mulsf3
 113               	.global	__fixunssfsi
 114               	.global	__subsf3
 115               		.section	.text.startup,"ax",@progbits
 117               	.global	main
 119               	main:
   1:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <stdio.h>
   2:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <avr/io.h>
   3:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <avr/interrupt.h>
   4:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <util/delay.h>
   5:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include <stdbool.h>
   6:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "TWI_Master.h"
   7:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "cc1101.h"
   8:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #include "pins_arduino.h"
   9:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //#include "ext_interrupt.h"
  10:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveaddress    0x04
  11:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveAddress2   0x40
  12:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define slaveAddress3   0x68
  13:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define bit(b) (1UL << (b))
  14:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** #define tx_size 61
  15:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** 
  16:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte TX_buffer[tx_size]={0};
  17:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte i;
  18:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** 
  19:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte RX_buffer[61]={0};
  20:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte i;
  21:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** byte available=false;
  22:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** void pciSetup(byte pin);
  23:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** ISR (PCINT2_vect);
  24:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** int main(void) {
 121               	.LM0:
 122               	.LFBB1:
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
  25:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte version;
  26:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte size = 0x00;
  27:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte marcstate;
  28:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     byte res;
  29:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     uint32_t X0,X1,Y0,Y1,Y2;
  30:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     uint32_t X_out,Y_out1,Y_out2;
  31:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     
  32:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     Init();
 128               	.LM1:
 129 0000 00D0      		rcall Init
  33:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     version = SpiReadStatus(CC1101_VERSION);
 131               	.LM2:
 132 0002 81E3      		ldi r24,lo8(49)
 133 0004 00D0      		rcall SpiReadStatus
 134 0006 C82F      		mov r28,r24
  34:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     SetReceive();
 136               	.LM3:
 137 0008 00D0      		rcall SetReceive
  35:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     TX_buffer[0] = 0x01;
 139               	.LM4:
 140 000a 81E0      		ldi r24,lo8(1)
 141 000c 8093 0000 		sts TX_buffer,r24
 142 0010 91E0      		ldi r25,lo8(1)
 143 0012 2AE0      		ldi r18,lo8(10)
 144               	.L2:
  36:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     for(i=1;i<tx_size;i++)
  37:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             {
  38:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TX_buffer[i]=i*10;
 146               	.LM5:
 147 0014 E92F      		mov r30,r25
 148 0016 F0E0      		ldi r31,0
 149 0018 E050      		subi r30,lo8(-(TX_buffer))
 150 001a F040      		sbci r31,hi8(-(TX_buffer))
 151 001c 2083      		st Z,r18
  36:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     for(i=1;i<tx_size;i++)
 153               	.LM6:
 154 001e 9F5F      		subi r25,lo8(-(1))
 155 0020 265F      		subi r18,lo8(-(10))
 156 0022 9D33      		cpi r25,lo8(61)
 157 0024 01F4      		brne .L2
 158 0026 9093 0000 		sts i,r25
  39:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
  40:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Init (100000))
 160               	.LM7:
 161 002a 60EA      		ldi r22,lo8(-96)
 162 002c 76E8      		ldi r23,lo8(-122)
 163 002e 81E0      		ldi r24,lo8(1)
 164 0030 90E0      		ldi r25,0
 165 0032 00D0      		rcall TWIM_Init
 166 0034 8111      		cpse r24,__zero_reg__
 167 0036 00C0      		rjmp .L23
 168               	.L4:
  41:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  42:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     
  43:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             while (1);
 170               	.LM8:
 171 0038 00C0      		rjmp .L4
 172               	.L26:
 173               	.LBB7:
  44:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  45:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     /*
  46:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****      ** Endless loop
  47:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****      */
  48:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     while (1)
  49:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     {
  50:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint32_t X=0, Y=0;
  51:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint16_t AcX = 0;
  52:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if(!TWIM_Start(slaveAddress2, TWIM_WRITE))
  53:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  54:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
  55:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
  56:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  57:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else{
  58:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(0xE3);
  59:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
 175               	.LM9:
 176 003a 00D0      		rcall TWIM_Stop
  60:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  61:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Start (slaveAddress2, TWIM_READ))
 178               	.LM10:
 179 003c 61E0      		ldi r22,lo8(1)
 180 003e 80E4      		ldi r24,lo8(64)
 181 0040 00D0      		rcall TWIM_Start
 182 0042 8111      		cpse r24,__zero_reg__
 183 0044 00C0      		rjmp .L7
  62:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  63:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
 185               	.LM11:
 186 0046 00D0      		rcall TWIM_Stop
  50:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         uint16_t AcX = 0;
 188               	.LM12:
 189 0048 F12C      		mov r15,__zero_reg__
 190               	.L8:
  64:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  65:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else
  66:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  67:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X0=TWIM_ReadAck();
  68:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X1=TWIM_ReadNack();
  69:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X0=X0<<8;
  70:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X_out=X0+X1;
  71:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X=(175.72*X_out)/65536;
  72:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X=X-46.85;
  73:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            AcX = TWIM_ReadAck() <<8 | TWIM_ReadAck();
  74:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TX_buffer[1] = AcX;
  75:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            TX_buffer[2] = AcX <<8;
  76:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  77:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         
  78:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         if (!TWIM_Start (slaveaddress, TWIM_WRITE))
 192               	.LM13:
 193 004a 60E0      		ldi r22,0
 194 004c 84E0      		ldi r24,lo8(4)
 195 004e 00D0      		rcall TWIM_Start
 196 0050 8111      		cpse r24,__zero_reg__
 197 0052 00C0      		rjmp .L9
 198               	.L27:
  79:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  80:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
  81:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
  82:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         else
  83:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
  84:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         //sent = SendData(TX_buffer,size);
  85:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****           //  byte res;
  86:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(X);
  87:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(version);
  88:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             marcstate = SpiReadStatus(CC1101_MARCSTATE);
  89:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if(SpiReadStatus(CC1101_MARCSTATE) != 1){
  90:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 marcstate = SpiReadStatus(CC1101_MARCSTATE);
  91:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 _delay_ms(1000);
  92:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
  93:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             size=ReceiveData(RX_buffer);
  94:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
  95:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if (size>0) {
  96:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TWIM_Write(RX_buffer[8]);
  97:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 
  98:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 if(RX_buffer[0] == 0x01){
  99:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                     SpiWriteReg(CC1101_TXFIFO,tx_size);
 100:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiWriteBurstReg(CC1101_TXFIFO,TX_buffer,tx_size);      //write data to sen
 101:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_STX);                  //start send
 102:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         TWIM_Write(SpiReadStatus(CC1101_MARCSTATE));
 103:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_high();
 104:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_low();
 105:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         if((SpiReadStatus(CC1101_TXBYTES) & 0x7F) == 0)
 106:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                             res = 1;
 107:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 108:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         TWIM_Write(res);
 109:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_SFTX);
 110:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 }
 111:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             }
 112:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(size);
 113:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
 200               	.LM14:
 201 0054 00D0      		rcall TWIM_Stop
 202               	.LBB8:
 203               	.LBB9:
 205               	.Ltext1:
   1:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* $Id: delay.h.in 2385 2013-05-03 13:14:20Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  41:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  42:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  46:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /** \file */
  47:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \code
  49:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \endcode
  53:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  54:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     used.
  58:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  59:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  68:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  77:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  81:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** */
  82:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  87:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  88:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  93:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  94:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
  97:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
  98:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #endif
 103:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 104:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** /**
 105:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 107:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 109:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 112:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 114:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 120:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 125:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 132:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 140:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****  */
 141:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** void
 142:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** {
 144:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 155:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 158:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#else
 159:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	#endif
 162:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 
 163:/usr/local/Cellar/avr-gcc/4.9.3/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 207               	.LM15:
 208 0056 8FEF      		ldi r24,lo8(2399999)
 209 0058 9EE9      		ldi r25,hi8(2399999)
 210 005a 24E2      		ldi r18,hlo8(2399999)
 211 005c 8150      		1: subi r24,1
 212 005e 9040      		sbci r25,0
 213 0060 2040      		sbci r18,0
 214 0062 01F4      		brne 1b
 215 0064 00C0      		rjmp .
 216 0066 0000      		nop
 217               	.LBE9:
 218               	.LBE8:
 220               	.Ltext2:
 114:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         }
 115:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         
 116:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         _delay_ms(1500);
 117:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         SetReceive();
 222               	.LM16:
 223 0068 00D0      		rcall SetReceive
 224               	.L23:
  52:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         {
 226               	.LM17:
 227 006a 60E0      		ldi r22,0
 228 006c 80E4      		ldi r24,lo8(64)
 229 006e 00D0      		rcall TWIM_Start
 230 0070 8823      		tst r24
 231 0072 01F0      		breq .L26
  58:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop();
 233               	.LM18:
 234 0074 83EE      		ldi r24,lo8(-29)
 235 0076 00D0      		rcall TWIM_Write
 236 0078 00C0      		rjmp .L26
 237               	.L7:
  67:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X1=TWIM_ReadNack();
 239               	.LM19:
 240 007a 00D0      		rcall TWIM_ReadAck
 241 007c C82E      		mov r12,r24
 242 007e D12C      		mov r13,__zero_reg__
 243 0080 E12C      		mov r14,__zero_reg__
 244 0082 F12C      		mov r15,__zero_reg__
  68:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X0=X0<<8;
 246               	.LM20:
 247 0084 00D0      		rcall TWIM_ReadNack
  69:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X_out=X0+X1;
 249               	.LM21:
 250 0086 FE2C      		mov r15,r14
 251 0088 ED2C      		mov r14,r13
 252 008a DC2C      		mov r13,r12
 253 008c CC24      		clr r12
  70:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X=(175.72*X_out)/65536;
 255               	.LM22:
 256 008e A701      		movw r20,r14
 257 0090 9601      		movw r18,r12
 258 0092 280F      		add r18,r24
 259 0094 311D      		adc r19,__zero_reg__
 260 0096 411D      		adc r20,__zero_reg__
 261 0098 511D      		adc r21,__zero_reg__
 262 009a CA01      		movw r24,r20
 263 009c B901      		movw r22,r18
  71:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             X=X-46.85;
 265               	.LM23:
 266 009e 00D0      		rcall __floatunsisf
 267 00a0 22E5      		ldi r18,lo8(82)
 268 00a2 38EB      		ldi r19,lo8(-72)
 269 00a4 4FE2      		ldi r20,lo8(47)
 270 00a6 53E4      		ldi r21,lo8(67)
 271 00a8 00D0      		rcall __mulsf3
 272 00aa 20E0      		ldi r18,0
 273 00ac 30E0      		ldi r19,0
 274 00ae 40E8      		ldi r20,lo8(-128)
 275 00b0 57E3      		ldi r21,lo8(55)
 276 00b2 00D0      		rcall __mulsf3
 277 00b4 00D0      		rcall __fixunssfsi
  72:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** //            AcX = TWIM_ReadAck() <<8 | TWIM_ReadAck();
 279               	.LM24:
 280 00b6 00D0      		rcall __floatunsisf
 281 00b8 26E6      		ldi r18,lo8(102)
 282 00ba 36E6      		ldi r19,lo8(102)
 283 00bc 4BE3      		ldi r20,lo8(59)
 284 00be 52E4      		ldi r21,lo8(66)
 285 00c0 00D0      		rcall __subsf3
 286 00c2 00D0      		rcall __fixunssfsi
 287 00c4 F62E      		mov r15,r22
 288 00c6 00C0      		rjmp .L8
 289               	.L9:
  86:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Write(version);
 291               	.LM25:
 292 00c8 8F2D      		mov r24,r15
 293 00ca 00D0      		rcall TWIM_Write
  87:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             marcstate = SpiReadStatus(CC1101_MARCSTATE);
 295               	.LM26:
 296 00cc 8C2F      		mov r24,r28
 297 00ce 00D0      		rcall TWIM_Write
  88:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             if(SpiReadStatus(CC1101_MARCSTATE) != 1){
 299               	.LM27:
 300 00d0 85E3      		ldi r24,lo8(53)
 301 00d2 00D0      		rcall SpiReadStatus
  89:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 marcstate = SpiReadStatus(CC1101_MARCSTATE);
 303               	.LM28:
 304 00d4 85E3      		ldi r24,lo8(53)
 305 00d6 00D0      		rcall SpiReadStatus
 306 00d8 8130      		cpi r24,lo8(1)
 307 00da 01F0      		breq .L11
  90:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 _delay_ms(1000);
 309               	.LM29:
 310 00dc 85E3      		ldi r24,lo8(53)
 311 00de 00D0      		rcall SpiReadStatus
 312               	.LBB10:
 313               	.LBB11:
 315               	.Ltext3:
 317               	.LM30:
 318 00e0 3FEF      		ldi r19,lo8(1599999)
 319 00e2 49E6      		ldi r20,hi8(1599999)
 320 00e4 58E1      		ldi r21,hlo8(1599999)
 321 00e6 3150      		1: subi r19,1
 322 00e8 4040      		sbci r20,0
 323 00ea 5040      		sbci r21,0
 324 00ec 01F4      		brne 1b
 325 00ee 00C0      		rjmp .
 326 00f0 0000      		nop
 327               	.L11:
 328               	.LBE11:
 329               	.LBE10:
 331               	.Ltext4:
  93:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             
 333               	.LM31:
 334 00f2 80E0      		ldi r24,lo8(RX_buffer)
 335 00f4 90E0      		ldi r25,hi8(RX_buffer)
 336 00f6 00D0      		rcall ReceiveData
 337 00f8 F82E      		mov r15,r24
  95:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 TWIM_Write(RX_buffer[8]);
 339               	.LM32:
 340 00fa 8823      		tst r24
 341 00fc 01F0      		breq .L13
  96:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 
 343               	.LM33:
 344 00fe 8091 0000 		lds r24,RX_buffer+8
 345 0102 00D0      		rcall TWIM_Write
  98:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                     SpiWriteReg(CC1101_TXFIFO,tx_size);
 347               	.LM34:
 348 0104 8091 0000 		lds r24,RX_buffer
 349 0108 8130      		cpi r24,lo8(1)
 350 010a 01F4      		brne .L13
  99:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiWriteBurstReg(CC1101_TXFIFO,TX_buffer,tx_size);      //write data to sen
 352               	.LM35:
 353 010c 6DE3      		ldi r22,lo8(61)
 354 010e 8FE3      		ldi r24,lo8(63)
 355 0110 00D0      		rcall SpiWriteReg
 100:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_STX);                  //start send
 357               	.LM36:
 358 0112 4DE3      		ldi r20,lo8(61)
 359 0114 60E0      		ldi r22,lo8(TX_buffer)
 360 0116 70E0      		ldi r23,hi8(TX_buffer)
 361 0118 8FE3      		ldi r24,lo8(63)
 362 011a 00D0      		rcall SpiWriteBurstReg
 101:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         TWIM_Write(SpiReadStatus(CC1101_MARCSTATE));
 364               	.LM37:
 365 011c 85E3      		ldi r24,lo8(53)
 366 011e 00D0      		rcall SpiStrobe
 102:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_high();
 368               	.LM38:
 369 0120 85E3      		ldi r24,lo8(53)
 370 0122 00D0      		rcall SpiReadStatus
 371 0124 00D0      		rcall TWIM_Write
 372               	.L15:
 103:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         wait_GDO0_low();
 374               	.LM39:
 375 0126 4D9B      		sbis 0x9,5
 376 0128 00C0      		rjmp .L15
 377               	.L20:
 104:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         if((SpiReadStatus(CC1101_TXBYTES) & 0x7F) == 0)
 379               	.LM40:
 380 012a 4D99      		sbic 0x9,5
 381 012c 00C0      		rjmp .L20
 105:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                             res = 1;
 383               	.LM41:
 384 012e 8AE3      		ldi r24,lo8(58)
 385 0130 00D0      		rcall SpiReadStatus
 108:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                         SpiStrobe(CC1101_SFTX);
 387               	.LM42:
 388 0132 81E0      		ldi r24,lo8(1)
 389 0134 00D0      		rcall TWIM_Write
 109:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****                 }
 391               	.LM43:
 392 0136 8BE3      		ldi r24,lo8(59)
 393 0138 00D0      		rcall SpiStrobe
 394               	.L13:
 112:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****             TWIM_Stop ();
 396               	.LM44:
 397 013a 8F2D      		mov r24,r15
 398 013c 00D0      		rcall TWIM_Write
 399 013e 00C0      		rjmp .L27
 400               	.LBE7:
 406               	.Lscope1:
 407               		.text
 410               	.global	pciSetup
 412               	pciSetup:
 118:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****         //pciSetup(5);
 119:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     }
 120:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 121:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** void pciSetup(byte pin)
 122:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** {
 414               	.LM45:
 415               	.LFBB2:
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 0 */
 419               	.L__stack_usage = 0
 123:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     *digitalPinToPCMSK(pin) |= bit (digitalPinToPCMSKbit(pin));  // enable pin
 421               	.LM46:
 422 0000 8830      		cpi r24,lo8(8)
 423 0002 00F0      		brlo .L33
 425               	.LM47:
 426 0004 8E30      		cpi r24,lo8(14)
 427 0006 00F0      		brlo .L34
 429               	.LM48:
 430 0008 8631      		cpi r24,lo8(22)
 431 000a 00F4      		brsh .L35
 433               	.LM49:
 434 000c ECE6      		ldi r30,lo8(108)
 435 000e F0E0      		ldi r31,0
 436 0010 00C0      		rjmp .L30
 437               	.L33:
 438 0012 EDE6      		ldi r30,lo8(109)
 439 0014 F0E0      		ldi r31,0
 440 0016 00C0      		rjmp .L30
 441               	.L34:
 442 0018 EBE6      		ldi r30,lo8(107)
 443 001a F0E0      		ldi r31,0
 444 001c 00C0      		rjmp .L30
 445               	.L35:
 446 001e E0E0      		ldi r30,0
 447 0020 F0E0      		ldi r31,0
 448               	.L30:
 450               	.LM50:
 451 0022 9081      		ld r25,Z
 452 0024 282F      		mov r18,r24
 453 0026 2770      		andi r18,lo8(7)
 454 0028 41E0      		ldi r20,lo8(1)
 455 002a 50E0      		ldi r21,0
 456 002c 60E0      		ldi r22,0
 457 002e 70E0      		ldi r23,0
 458 0030 00C0      		rjmp 2f
 459               		1:
 460 0032 440F      		lsl r20
 461 0034 551F      		rol r21
 462 0036 661F      		rol r22
 463 0038 771F      		rol r23
 464               		2:
 465 003a 2A95      		dec r18
 466 003c 02F4      		brpl 1b
 467 003e 492B      		or r20,r25
 468 0040 4083      		st Z,r20
 124:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     PCIFR  |= bit (digitalPinToPCICRbit(pin)); // clear any outstanding interrupt
 470               	.LM51:
 471 0042 2BB3      		in r18,0x1b
 472 0044 8830      		cpi r24,lo8(8)
 473 0046 00F0      		brlo .L36
 475               	.LM52:
 476 0048 8031      		cpi r24,lo8(16)
 477 004a 00F0      		brlo .L37
 479               	.LM53:
 480 004c 8831      		cpi r24,lo8(24)
 481 004e 00F0      		brlo .L38
 483               	.LM54:
 484 0050 91E0      		ldi r25,lo8(1)
 485 0052 00C0      		rjmp .L31
 486               	.L36:
 487 0054 92E0      		ldi r25,lo8(2)
 488 0056 00C0      		rjmp .L31
 489               	.L37:
 490 0058 98E0      		ldi r25,lo8(8)
 491 005a 00C0      		rjmp .L31
 492               	.L38:
 493 005c 94E0      		ldi r25,lo8(4)
 494               	.L31:
 496               	.LM55:
 497 005e 922B      		or r25,r18
 498 0060 9BBB      		out 0x1b,r25
 125:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     PCICR  |= bit (digitalPinToPCICRbit(pin)); // enable interrupt for the group
 500               	.LM56:
 501 0062 9091 6800 		lds r25,104
 502 0066 8830      		cpi r24,lo8(8)
 503 0068 00F0      		brlo .L39
 505               	.LM57:
 506 006a 8031      		cpi r24,lo8(16)
 507 006c 00F0      		brlo .L40
 509               	.LM58:
 510 006e 8831      		cpi r24,lo8(24)
 511 0070 00F0      		brlo .L41
 513               	.LM59:
 514 0072 81E0      		ldi r24,lo8(1)
 515 0074 00C0      		rjmp .L32
 516               	.L39:
 517 0076 82E0      		ldi r24,lo8(2)
 518 0078 00C0      		rjmp .L32
 519               	.L40:
 520 007a 88E0      		ldi r24,lo8(8)
 521 007c 00C0      		rjmp .L32
 522               	.L41:
 523 007e 84E0      		ldi r24,lo8(4)
 524               	.L32:
 526               	.LM60:
 527 0080 892B      		or r24,r25
 528 0082 8093 6800 		sts 104,r24
 529 0086 0895      		ret
 531               	.Lscope2:
 533               	.global	__vector_5
 535               	__vector_5:
 126:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 127:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** ISR (PCINT2_vect) // handle pin change interrupt for D0 to D7 here
 128:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** {
 537               	.LM61:
 538               	.LFBB3:
 539 0088 1F92      		push r1
 540 008a 0F92      		push r0
 541 008c 0FB6      		in r0,__SREG__
 542 008e 0F92      		push r0
 543 0090 1124      		clr __zero_reg__
 544 0092 8F93      		push r24
 545               	/* prologue: Signal */
 546               	/* frame size = 0 */
 547               	/* stack size = 4 */
 548               	.L__stack_usage = 4
 129:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c ****     available = true;
 550               	.LM62:
 551 0094 81E0      		ldi r24,lo8(1)
 552 0096 8093 0000 		sts available,r24
 553               	/* epilogue start */
 130:/Users/davide/Documents/NQM_WORK/MinimizedBoard/Attiny48/i2ctest/MINI-RF/MINI-RF/main.c **** }
 555               	.LM63:
 556 009a 8F91      		pop r24
 557 009c 0F90      		pop r0
 558 009e 0FBE      		out __SREG__,r0
 559 00a0 0F90      		pop r0
 560 00a2 1F90      		pop r1
 561 00a4 1895      		reti
 563               	.Lscope3:
 564               	.global	available
 565               		.section .bss
 568               	available:
 569 0000 00        		.zero	1
 570               	.global	RX_buffer
 573               	RX_buffer:
 574 0001 0000 0000 		.zero	61
 574      0000 0000 
 574      0000 0000 
 574      0000 0000 
 574      0000 0000 
 575               		.comm	i,1,1
 576               	.global	TX_buffer
 579               	TX_buffer:
 580 003e 0000 0000 		.zero	61
 580      0000 0000 
 580      0000 0000 
 580      0000 0000 
 580      0000 0000 
 599               		.text
 601               	.Letext0:
 602               		.ident	"GCC: (GNU) 4.9.3"
 603               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:4      *ABS*:000000000000003f __SREG__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:119    .text.startup:0000000000000000 main
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:579    .bss:000000000000003e TX_buffer
                            *COM*:0000000000000001 i
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:573    .bss:0000000000000001 RX_buffer
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:412    .text:0000000000000000 pciSetup
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:535    .text:0000000000000088 __vector_5
/var/folders/fc/8p1lqrrj7p3f4bt9djyny4yh0000gn/T//ccOTpAu8.s:568    .bss:0000000000000000 available

UNDEFINED SYMBOLS
__floatunsisf
__mulsf3
__fixunssfsi
__subsf3
Init
SpiReadStatus
SetReceive
TWIM_Init
TWIM_Stop
TWIM_Start
TWIM_Write
TWIM_ReadAck
TWIM_ReadNack
ReceiveData
SpiWriteReg
SpiWriteBurstReg
SpiStrobe
__do_clear_bss
